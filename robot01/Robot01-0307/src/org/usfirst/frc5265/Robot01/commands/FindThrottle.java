// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5265.Robot01.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc5265.Robot01.Robot;

/**
 *
 */
public class FindThrottle extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public FindThrottle() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveBase);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	returnThrottle();
    }
    
    public double returnThrottle() {
    	// get throttle setting, -1 < throttle value < 1, and convert to speed for the motor
    	double speedValue = Robot.oi.valueThrottle();
    	// convert that value from just moving to full throttle
    	//
    	// change the -1 to +1 value to 0 to +2
    	speedValue = speedValue + 1;
    	// now change to a value between 0 and +1
    	speedValue = speedValue/2;
    	// the throttle is now 0 at the top and +1 at the bottom
    	// this reverses that to +1 at the top and 0 at the bottom
    	speedValue = 1-speedValue;
    	// 0.36 barely moves the robot. This conversion makes 0 = just moving and 1 = full throttle
    	speedValue = .64*speedValue + .36;
    	return speedValue;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	returnThrottle();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
